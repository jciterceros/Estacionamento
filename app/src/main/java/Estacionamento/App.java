/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Estacionamento;

import database.CleanService;
import database.DatabaseConfig;
import database.DatabaseManager;
import database.seeds.SeedsCliente;
import database.seeds.SeedsEstaciona;
import database.seeds.SeedsModelo;
import database.seeds.SeedsPatio;
import database.seeds.SeedsVeiculo;
import entities.Cliente;
import entities.Estaciona;
import entities.Modelo;
import entities.Patio;
import entities.Veiculo;

import java.sql.SQLException;
import java.util.List;

import services.ClienteService;
import services.EstacionaService;
import services.LoadService;
import services.ModeloService;
import services.PatioService;
import services.VeiculoService;

public class App {

    public String getGreeting() {
        return "Seja bem-vindo ao Sistema de Estacionamento de vehiculos";
    }

    public static void main(String[] args) throws SQLException {
        System.out.println(new App().getGreeting());

        // Configuração do banco de dados
        DatabaseConfig config = new DatabaseConfig("localhost", "5433", "Estacionamento", "postgres", "postgres");

        // Inicialização do gerenciador do banco de dados
        DatabaseManager dbManager = new DatabaseManager(config);

        // Deletar todas as tabelas, Inicializar tudo do Zero
        CleanService cleanService = new CleanService(dbManager);
        cleanService.deletarTodasTabelas();

        // Inicialização do serviço Cliente
        ClienteService clienteService = new ClienteService(dbManager);
        SeedsCliente seedsCliente = new SeedsCliente(clienteService);

        // Inicialização do serviço Modelo
        ModeloService modeloService = new ModeloService(dbManager);
        SeedsModelo seedsModelo = new SeedsModelo(modeloService);

        // Inicialização do serviço Patio
        PatioService patioService = new PatioService(dbManager);
        SeedsPatio seedsPatio = new SeedsPatio(patioService);

        // Inicialização do serviço Veiculo
        VeiculoService veiculoService = new VeiculoService(dbManager);
        SeedsVeiculo seedsVeiculo = new SeedsVeiculo(veiculoService);

        // Inicialização do serviço Estacionamento
        EstacionaService estacionaService = new EstacionaService(dbManager);
        SeedsEstaciona seedsEstaciona = new SeedsEstaciona(estacionaService);

        LoadService loadService = new LoadService(dbManager);

        // Carregando dados dos Clientes direto do banco de dados utilizando LoadService
        List<Cliente> clientes = null;
        clientes = loadService.loadClientes();

        clientes.forEach(cliente -> {
            System.out.println(cliente);
        });

        // Carregando dados dos Modelos direto do banco de dados utilizando LoadService
        List<Modelo> modelos = null;
        modelos = loadService.loadModelos();

        modelos.forEach(modelo -> {
            System.out.println(modelo);
        });

        // Carregar dados dos Patios direto do banco de dados utilizando LoadService
        List<Patio> patios = null;
        patios = loadService.loadPatios();

        patios.forEach(patio -> {
            System.out.println(patio);
        });

        // Carregar dados dos Veiculos direto do banco de dados utilizando LoadService
        List<Veiculo> veiculos = null;
        veiculos = loadService.loadVeiculos(clientes, modelos);

        veiculos.forEach(veiculo -> {
            System.out.println(veiculo);
        });

        // Carregar dados do Estacionamento direto do banco de dados utilizando
        // LoadService
        List<Estaciona> estacionamentos = null;
        estacionamentos = loadService.loadEstaciona(veiculos, patios);

        estacionamentos.forEach(estaciona -> {
            System.out.println(estaciona);
        });

        dbManager.disconnect();
        System.out.println("Saindo da aplicacao volte novamente...");
    }
}
